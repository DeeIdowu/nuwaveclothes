{"ast":null,"code":"import UserActionTypes from \"./user.types\"; //grabbing user function or user auth, or null to fire appropriate action\n//for google authentication\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const SignInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const SignInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); //for email actions- must obtain user email and password therefore payload is object passed:\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); //check for user persistence in session\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n}); //for sign out process:\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n}); //for sign up process\n\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\nexport const signUpSuccess = ({\n  user,\n  additionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    additionalData\n  }\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/Users/deethegreat/Desktop/2019-Job-Prep-Content/Complete-React-Dev/Master-Project/nuwaveclothes/client/src/redux/user/userActions.js"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","SignInSuccess","user","SIGN_IN_SUCCESS","payload","SignInFailure","error","SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","signUpStart","userCredentials","SIGN_UP_START","signUpSuccess","additionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADgB,CAAP,CAA1B;AAIP,OAAO,MAAMC,aAAa,GAAGC,IAAI,KAAK;AACpCH,EAAAA,IAAI,EAAEF,eAAe,CAACM,eADc;AAEpCC,EAAAA,OAAO,EAAEF;AAF2B,CAAL,CAA1B;AAKP,OAAO,MAAMG,aAAa,GAAGC,KAAK,KAAK;AACrCP,EAAAA,IAAI,EAAEF,eAAe,CAACU,eADe;AAErCH,EAAAA,OAAO,EAAEE;AAF4B,CAAL,CAA3B,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAGC,gBAAgB,KAAK;AACnDV,EAAAA,IAAI,EAAEF,eAAe,CAACa,mBAD6B;AAEnDN,EAAAA,OAAO,EAAEK;AAF0C,CAAL,CAAzC,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACrCZ,EAAAA,IAAI,EAAEF,eAAe,CAACe;AADe,CAAP,CAAzB,C,CAIP;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjCd,EAAAA,IAAI,EAAEF,eAAe,CAACiB;AADW,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnChB,EAAAA,IAAI,EAAEF,eAAe,CAACmB;AADa,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAGX,KAAK,KAAK;AACtCP,EAAAA,IAAI,EAAEF,eAAe,CAACqB,gBADgB;AAEtCd,EAAAA,OAAO,EAAEE;AAF6B,CAAL,CAA5B,C,CAKP;;AACA,OAAO,MAAMa,WAAW,GAAGC,eAAe,KAAK;AAC7CrB,EAAAA,IAAI,EAAEF,eAAe,CAACwB,aADuB;AAE7CjB,EAAAA,OAAO,EAAEgB;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEpB,EAAAA,IAAF;AAAQqB,EAAAA;AAAR,CAAD,MAA+B;AAC1DxB,EAAAA,IAAI,EAAEF,eAAe,CAAC2B,eADoC;AAE1DpB,EAAAA,OAAO,EAAE;AAAEF,IAAAA,IAAF;AAAQqB,IAAAA;AAAR;AAFiD,CAA/B,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAGnB,KAAK,KAAK;AACrCP,EAAAA,IAAI,EAAEF,eAAe,CAAC6B,eADe;AAErCtB,EAAAA,OAAO,EAAEE;AAF4B,CAAL,CAA3B","sourcesContent":["import UserActionTypes from \"./user.types\";\n\n//grabbing user function or user auth, or null to fire appropriate action\n\n//for google authentication\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const SignInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\n\nexport const SignInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n});\n\n//for email actions- must obtain user email and password therefore payload is object passed:\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\n\n//check for user persistence in session\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\n\n//for sign out process:\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\n\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\n\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n});\n\n//for sign up process\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\n\nexport const signUpSuccess = ({ user, additionalData }) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: { user, additionalData }\n});\n\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});\n"]},"metadata":{},"sourceType":"module"}