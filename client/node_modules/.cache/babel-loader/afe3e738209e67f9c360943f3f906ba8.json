{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport RootSaga from \"../redux/user/RootSaga\"; //for saga middleware:\n\nconst sagaMiddleware = createSagaMiddleware(); //setting up middleware via array - the array enables you to add multiple middlewares\n\nconst middlewares = [sagaMiddleware]; //to not display logger in production:\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} //creation of store\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //for use of saga:\n\nsagaMiddleware.run(RootSaga); //exporting store via ReduxPersist\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/deethegreat/Desktop/2019-Job-Prep-Content/Complete-React-Dev/Master-Project/nuwaveclothes/client/src/redux/Store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","RootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB,C,CACA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD,C,CAED;;;AACA,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,E,CAEA;;AACA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport RootSaga from \"../redux/user/RootSaga\";\n\n//for saga middleware:\nconst sagaMiddleware = createSagaMiddleware();\n\n//setting up middleware via array - the array enables you to add multiple middlewares\nconst middlewares = [sagaMiddleware];\n//to not display logger in production:\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n//creation of store\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n//for use of saga:\nsagaMiddleware.run(RootSaga);\n\n//exporting store via ReduxPersist\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}